components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [candidate, recruiter, staff, collaborator, support, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Recruiter:
      type: object
      properties:
        user:
          type: object
        profilePhoto:
          type: string
        isManager:
          type: boolean
        company:
          type: object


    Candidate:
      type: object
      properties:
        user:
          type: object
        lastName:
          type: string
        firstName:
          type: string
        available:
          type: boolean
        cvPro:
          type: object
        school:
          type: object
      example:

    Company:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        siretNumber:
          type: string
        companyProfilePhoto:
          type: string
      example:


    Offer:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        siretNumber:
          type: string
        companyProfilePhoto:
          type: string
      example:



    Application:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        siretNumber:
          type: string
        companyProfilePhoto:
          type: string
      example:



    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
